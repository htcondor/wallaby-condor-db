--- !ruby/object:Mrg::Grid::PatchConfigs::Patch 
db_version: "1.15"
expected: !ruby/object:Mrg::Grid::SerializedConfigs::Store 
  features: 
    LowLatency: 
      params: 
        JOB_HOOKS_PORT: $(LL_DAEMON_PORT)
        LL_BROKER_QUEUE: 0
        DAEMON_LIST: ">= LL_DAEMON"
        LOW_LATENCY_JOB_HOOK_JOB_EXIT: $(LIBEXEC)/hooks/hook_job_exit.py
        LOW_LATENCY_HOOK_REPLY_FETCH: $(LIBEXEC)/hooks/hook_reply_fetch.py
        FETCHWORKDELAY: 10 * (Activity == "Idle")
        LOW_LATENCY_JOB_HOOK_UPDATE_JOB_INFO: $(LIBEXEC)/hooks/hook_update_job_status.py
        STARTER_UPDATE_INTERVAL: "30"
        LOW_LATENCY_JOB_HOOK_PREPARE_JOB: $(LIBEXEC)/hooks/hook_prepare_job.py
        LL_DAEMON: $(SBIN)/carod
        LL_DAEMON_IP: 127.0.0.1
        LL_DAEMON_LEASE_TIME: "35"
        STARTD_JOB_HOOK_KEYWORD: LOW_LATENCY
        MAX_LL_DAEMON_LOG: "1000000"
        LL_DAEMON_QUEUED_CONNECTIONS: "5"
        LL_BROKER_IP: 0
        LL_DAEMON_LEASE_CHECK_INTERVAL: "30"
        LL_DAEMON_PORT: "10000"
        LOW_LATENCY_HOOK_FETCH_WORK: $(LIBEXEC)/hooks/hook_fetch_work.py
        LL_DAEMON_LOG: $(LOG)/CaroLog
        LL_BROKER_PORT: "5672"
    BaseDBVersion: 
      params: 
        BaseDBVersion: "1.14"
    HAScheduler: 
      conflicts: 
      - Scheduler
      included_features: 
      - JobQueueLocation
      - BaseScheduler
      params: 
        HA_LOCK_HOLD_TIME: "300"
        HA_LOCK_URL: 0
        VALID_SPOOL_FILES: $(VALID_SPOOL_FILES), SCHEDD.lock
        HA_POLL_PERIOD: "60"
        MASTER_HA_LIST: $(MASTER_HA_LIST), SCHEDD
        SCHEDD_NAME: 0
    Scheduler: 
      included_features: 
      - JobQueueLocation
      - BaseScheduler
    BaseScheduler: 
      params: 
        SHADOW_DEBUG: ""
        SHADOW_LOG: $(LOG)/ShadowLog
        SHADOW: $(SBIN)/condor_shadow
        SHADOW_LIST: SHADOW
        SHADOW_SIZE_ESTIMATE: "1800"
        SCHEDD_DEBUG: D_PID
        QUEUE_SUPER_USERS: root, condor
        MAX_SHADOW_LOG: "1000000"
        SCHEDD: $(SBIN)/condor_schedd
        SHADOW_LOCK: $(LOCK)/ShadowLock
        DAEMON_LIST: ">= SCHEDD"
        ALLOW_NEGOTIATOR_SCHEDD: $(ALLOW_NEGOTIATOR_SCHEDD), $(CONDOR_HOST), $(FLOCK_NEGOTIATOR_HOSTS)
        MAX_SCHEDD_LOG: "1000000"
        START_LOCAL_UNIVERSE: "True"
        SCHEDD_DAEMON_AD_FILE: $(LOG)/.schedd_classad
        STARTER_LOCAL: $(SBIN)/condor_starter
        SCHEDD_ADDRESS_FILE: $(LOG)/.schedd_address
        SCHEDD_LOG: $(LOG)/SchedLog
        START_SCHEDULER_UNIVERSE: "True"
  groups: {}

  nodes: {}

  params: 
    LL_BROKER_QUEUE: 
      kind: String
      conflicts: []

      default: ""
      visibility_level: 0
      description: The queue on the AMQP broker containing jobs
      requires_restart: false
      depends: []

      must_change: true
    LL_DAEMON_LEASE_TIME: 
      kind: Integer
      conflicts: []

      default: "35"
      visibility_level: 0
      description: The amount of time condor can process a low-latency job without reporting status to carod
      requires_restart: false
      depends: []

      must_change: false
    LL_DAEMON_IP: 
      kind: String
      conflicts: []

      default: 127.0.0.1
      visibility_level: 0
      description: The IP Address where the carod is listening for connections
      requires_restart: false
      depends: []

      must_change: false
    LL_DAEMON: 
      kind: String
      conflicts: []

      default: $(SBIN)/carod
      visibility_level: 0
      description: The location of the carod daemon
      requires_restart: true
      depends: []

      must_change: false
    MAX_LL_DAEMON_LOG: 
      kind: Integer
      conflicts: []

      default: "1000000"
      visibility_level: 0
      description: The maximum size of the Low-Latency daemon log
      requires_restart: true
      depends: []

      must_change: false
    LL_BROKER_IP: 
      kind: String
      conflicts: []

      default: ""
      visibility_level: 0
      description: The IP address where an AMQP broker is running
      requires_restart: false
      depends: []

      must_change: true
    LL_DAEMON_QUEUED_CONNECTIONS: 
      kind: Integer
      conflicts: []

      default: "5"
      visibility_level: 0
      description: The number of outstandinng connections carod will allow before rejecting connection requests
      requires_restart: false
      depends: []

      must_change: false
    LL_DAEMON_PORT: 
      kind: Integer
      conflicts: []

      default: "10000"
      visibility_level: 0
      description: The port the carod daemon is using to listen for connections
      requires_restart: false
      depends: []

      must_change: false
    LL_DAEMON_LEASE_CHECK_INTERVAL: 
      kind: Integer
      conflicts: []

      default: "30"
      visibility_level: 0
      description: How often carod will check for jobs that haven't communicated in $(LL_DAEMON_LEASE_TIME)
      requires_restart: false
      depends: []

      must_change: false
    LL_DAEMON_LOG: 
      kind: String
      conflicts: []

      default: $(LOG)/CaroLog
      visibility_level: 0
      description: The location of the Low-Latency daemon log file
      requires_restart: true
      depends: []

      must_change: false
    LL_BROKER_PORT: 
      kind: Integer
      conflicts: []

      default: "5672"
      visibility_level: 0
      description: The port the AMQP broker is listening on for connections
      requires_restart: false
      depends: []

      must_change: false
  subsystems: 
    startd: 
      params: 
      - ALLOW_READ
      - ALLOW_WRITE
      - BENCHMARKTIMER
      - CONSOLE_DEVICES
      - CONTINUE
      - KILL
      - MAXJOBRETIREMENTTIME
      - MAX_STARTD_LOG
      - MAX_STARTER_LOG
      - PERIODIC_CHECKPOINT
      - PREEMPT
      - QMF_BROKER_AUTH_MECH
      - QMF_BROKER_HOST
      - QMF_BROKER_PASSWORD_FILE
      - QMF_BROKER_PORT
      - QMF_BROKER_USERNAME
      - QMF_DELETE_ON_SHUTDOWN
      - RUNBENCHMARKS
      - START
      - STARTD
      - STARTD_ADDRESS_FILE
      - STARTD_ATTRS
      - STARTD_CRON_AUTOPUBLISH
      - STARTD_CRON_NAME
      - STARTD_DEBUG
      - STARTD_JOB_EXPRS
      - STARTD_LOG
      - STARTER
      - STARTER_DEBUG
      - STARTER_LIST
      - STARTER_LOG
      - SUSPEND
      - TRIGGER_DATA_GETDATA_EXECUTABLE
      - TRIGGER_DATA_GETDATA_PERIOD
      - TRIGGER_DATA_GETDATA_PREFIX
      - TRIGGER_DATA_GETDATA_RECONFIG
      - TRIGGER_DATA_JOBLIST
      - WANT_SUSPEND
      - WANT_VACATE
    ll_daemon: 
      params: 
      - LL_BROKER_IP
      - LL_BROKER_PORT
      - LL_BROKER_QUEUE
      - LL_DAEMON
      - LL_DAEMON_IP
      - LL_DAEMON_LEASE_CHECK_INTERVAL
      - LL_DAEMON_LEASE_TIME
      - LL_DAEMON_LOG
      - LL_DAEMON_PORT
      - LL_DAEMON_QUEUED_CONNECTIONS
      - MAX_LL_DAEMON_LOG
updates: !ruby/object:Mrg::Grid::SerializedConfigs::Store 
  features: 
    LowLatency: 
      modifyParams: 
      - REPLACE
      - CAROD: $(SBIN)/carod
        JOB_HOOKS_PORT: $(CAROD_PORT)
        CAROD_PORT: "10000"
        CAROD_LEASE_TIME: "35"
        CAROD_QUEUED_CONNECTIONS: "5"
        DAEMON_LIST: ">= CAROD"
        LOW_LATENCY_JOB_HOOK_JOB_EXIT: $(LIBEXEC)/hooks/hook_job_exit.py
        CAROD_BROKER_IP: 0
        LOW_LATENCY_HOOK_REPLY_FETCH: $(LIBEXEC)/hooks/hook_reply_fetch.py
        LOW_LATENCY_JOB_HOOK_UPDATE_JOB_INFO: $(LIBEXEC)/hooks/hook_update_job_status.py
        FETCHWORKDELAY: 10 * (Activity == "Idle")
        STARTER_UPDATE_INTERVAL: "30"
        CAROD_BROKER_QUEUE: 0
        STARTD_JOB_HOOK_KEYWORD: LOW_LATENCY
        CAROD_LOG: $(LOG)/CaroLog
        CAROD_LEASE_CHECK_INTERVAL: "30"
        LOW_LATENCY_JOB_HOOK_PREPARE_JOB: $(LIBEXEC)/hooks/hook_prepare_job.py
        CAROD_IP: 127.0.0.1
        MAX_CAROD_LOG: "1000000"
        LOW_LATENCY_HOOK_FETCH_WORK: $(LIBEXEC)/hooks/hook_fetch_work.py
        CAROD_BROKER_PORT: "5672"
      - {}

    SchedulerInDL: 
      modifyParams: 
      - REPLACE
      - DAEMON_LIST: ">= SCHEDD"
      - {}

      modifyDepends: 
      - REPLACE
      - []

      - {}

      modifyConflicts: 
      - REPLACE
      - []

      - {}

      modifyIncludedFeatures: 
      - REPLACE
      - []

      - {}

    BaseDBVersion: 
      modifyParams: 
      - REPLACE
      - BaseDBVersion: v1.15
      - {}

    HAScheduler: 
      modifyParams: 
      - REPLACE
      - HA_LOCK_HOLD_TIME: "300"
        HA_LOCK_URL: 0
        VALID_SPOOL_FILES: $(VALID_SPOOL_FILES), SCHEDD.lock
        MASTER_HA_LIST: $(MASTER_HA_LIST), SCHEDD
        HA_POLL_PERIOD: "60"
      - {}

      modifyConflicts: 
      - REPLACE
      - []

      - {}

      modifyIncludedFeatures: 
      - REPLACE
      - - BaseHAScheduler
        - SchedulerInDL
      - {}

    Scheduler: 
      modifyIncludedFeatures: 
      - REPLACE
      - - JobQueueLocation
        - BaseScheduler
        - SchedulerInDL
      - {}

    SecureAviaryScheduler: 
      modifyParams: 
      - REPLACE
      - AVIARY_SSL_SERVER_KEY: 0
        AVIARY_SSL_SERVER_CERT: 0
        AVIARY_SSL: "True"
        AVIARY_SSL_CA_FILE: 0
        AVIARY_SSL_CA_DIR: 0
      - {}

      modifyDepends: 
      - REPLACE
      - []

      - {}

      modifyConflicts: 
      - REPLACE
      - []

      - {}

      modifyIncludedFeatures: 
      - REPLACE
      - - AviaryScheduler
      - {}

    BaseHAScheduler: 
      modifyParams: 
      - REPLACE
      - SCHEDD_NAME: 0
      - {}

      modifyDepends: 
      - REPLACE
      - []

      - {}

      modifyConflicts: 
      - REPLACE
      - - Scheduler
      - {}

      modifyIncludedFeatures: 
      - REPLACE
      - - JobQueueLocation
        - BaseScheduler
      - {}

    BaseScheduler: 
      modifyParams: 
      - REPLACE
      - SHADOW_LIST: SHADOW
        SHADOW_DEBUG: ""
        SHADOW: $(SBIN)/condor_shadow
        SHADOW_SIZE_ESTIMATE: "1800"
        SHADOW_LOG: $(LOG)/ShadowLog
        SCHEDD_DEBUG: D_PID
        QUEUE_SUPER_USERS: root, condor
        MAX_SHADOW_LOG: "1000000"
        SCHEDD: $(SBIN)/condor_schedd
        SHADOW_LOCK: $(LOCK)/ShadowLock
        ALLOW_NEGOTIATOR_SCHEDD: $(ALLOW_NEGOTIATOR_SCHEDD), $(CONDOR_HOST), $(FLOCK_NEGOTIATOR_HOSTS)
        START_LOCAL_UNIVERSE: "True"
        SCHEDD_DAEMON_AD_FILE: $(LOG)/.schedd_classad
        MAX_SCHEDD_LOG: "1000000"
        SCHEDD_ADDRESS_FILE: $(LOG)/.schedd_address
        STARTER_LOCAL: $(SBIN)/condor_starter
        SCHEDD_LOG: $(LOG)/SchedLog
        START_SCHEDULER_UNIVERSE: "True"
      - {}

  groups: {}

  nodes: {}

  params: 
    CAROD: 
      setDefault: $(SBIN)/carod
      setKind: String
      modifyDepends: 
      - REPLACE
      - []

      - {}

      setDescription: The location of the carod daemon
      setVisibilityLevel: 0
      setMustChange: false
      modifyConflicts: 
      - REPLACE
      - []

      - {}

      setRequiresRestart: true
    CAROD_LEASE_TIME: 
      setDefault: "35"
      setKind: Integer
      modifyDepends: 
      - REPLACE
      - []

      - {}

      setDescription: The amount of time condor can process a low-latency job without reporting status to carod
      setVisibilityLevel: 0
      setMustChange: false
      modifyConflicts: 
      - REPLACE
      - []

      - {}

      setRequiresRestart: false
    CAROD_PORT: 
      setDefault: "10000"
      setKind: Integer
      modifyDepends: 
      - REPLACE
      - []

      - {}

      setDescription: The port the carod daemon is using to listen for connections
      setVisibilityLevel: 0
      setMustChange: false
      modifyConflicts: 
      - REPLACE
      - []

      - {}

      setRequiresRestart: false
    CAROD_QUEUED_CONNECTIONS: 
      setDefault: "5"
      setKind: Integer
      modifyDepends: 
      - REPLACE
      - []

      - {}

      setDescription: The number of outstandinng connections carod will allow before rejecting connection requests
      setVisibilityLevel: 0
      setMustChange: false
      modifyConflicts: 
      - REPLACE
      - []

      - {}

      setRequiresRestart: false
    AVIARY_SSL_SERVER_KEY: 
      setDefault: ""
      setKind: String
      modifyDepends: 
      - REPLACE
      - []

      - {}

      setDescription: Path to Aviary SSL server private key
      setVisibilityLevel: 0
      setMustChange: true
      modifyConflicts: 
      - REPLACE
      - []

      - {}

      setRequiresRestart: true
    CAROD_BROKER_IP: 
      setDefault: ""
      setKind: String
      modifyDepends: 
      - REPLACE
      - []

      - {}

      setDescription: The IP address where an AMQP broker is running
      setVisibilityLevel: 0
      setMustChange: true
      modifyConflicts: 
      - REPLACE
      - []

      - {}

      setRequiresRestart: false
    AVIARY_SSL_SERVER_CERT: 
      setDefault: ""
      setKind: String
      modifyDepends: 
      - REPLACE
      - []

      - {}

      setDescription: Path to Aviary SSL server certificate
      setVisibilityLevel: 0
      setMustChange: true
      modifyConflicts: 
      - REPLACE
      - []

      - {}

      setRequiresRestart: true
    CAROD_LEASE_CHECK_INTERVAL: 
      setDefault: "30"
      setKind: Integer
      modifyDepends: 
      - REPLACE
      - []

      - {}

      setDescription: How often carod will check for jobs that haven't communicated in $(CAROD_LEASE_TIME)
      setVisibilityLevel: 0
      setMustChange: false
      modifyConflicts: 
      - REPLACE
      - []

      - {}

      setRequiresRestart: false
    CAROD_BROKER_QUEUE: 
      setDefault: ""
      setKind: String
      modifyDepends: 
      - REPLACE
      - []

      - {}

      setDescription: The queue on the AMQP broker containing jobs
      setVisibilityLevel: 0
      setMustChange: true
      modifyConflicts: 
      - REPLACE
      - []

      - {}

      setRequiresRestart: false
    AVIARY_SSL: 
      setDefault: "False"
      setKind: Boolean
      modifyDepends: 
      - REPLACE
      - []

      - {}

      setDescription: Enable HTTPS mutual authentication in Aviary
      setVisibilityLevel: 0
      setMustChange: false
      modifyConflicts: 
      - REPLACE
      - []

      - {}

      setRequiresRestart: true
    CAROD_LOG: 
      setDefault: $(LOG)/CaroLog
      setKind: String
      modifyDepends: 
      - REPLACE
      - []

      - {}

      setDescription: The location of the Low-Latency daemon log file
      setVisibilityLevel: 0
      setMustChange: false
      modifyConflicts: 
      - REPLACE
      - []

      - {}

      setRequiresRestart: true
    AVIARY_SSL_CA_FILE: 
      setDefault: ""
      setKind: String
      modifyDepends: 
      - REPLACE
      - []

      - {}

      setDescription: Path to Aviary SSL CA file
      setVisibilityLevel: 0
      setMustChange: true
      modifyConflicts: 
      - REPLACE
      - []

      - {}

      setRequiresRestart: true
    CAROD_IP: 
      setDefault: 127.0.0.1
      setKind: String
      modifyDepends: 
      - REPLACE
      - []

      - {}

      setDescription: The IP Address where the carod is listening for connections
      setVisibilityLevel: 0
      setMustChange: false
      modifyConflicts: 
      - REPLACE
      - []

      - {}

      setRequiresRestart: false
    MAX_CAROD_LOG: 
      setDefault: "1000000"
      setKind: Integer
      modifyDepends: 
      - REPLACE
      - []

      - {}

      setDescription: The maximum size of the Low-Latency daemon log
      setVisibilityLevel: 0
      setMustChange: false
      modifyConflicts: 
      - REPLACE
      - []

      - {}

      setRequiresRestart: true
    CAROD_BROKER_PORT: 
      setDefault: "5672"
      setKind: Integer
      modifyDepends: 
      - REPLACE
      - []

      - {}

      setDescription: The port the AMQP broker is listening on for connections
      setVisibilityLevel: 0
      setMustChange: false
      modifyConflicts: 
      - REPLACE
      - []

      - {}

      setRequiresRestart: false
    AVIARY_SSL_CA_DIR: 
      setDefault: ""
      setKind: String
      modifyDepends: 
      - REPLACE
      - []

      - {}

      setDescription: Path to Aviary SSL CA directory
      setVisibilityLevel: 0
      setMustChange: true
      modifyConflicts: 
      - REPLACE
      - []

      - {}

      setRequiresRestart: true
  subsystems: 
    startd: 
      modifyParams: 
      - REPLACE
      - - ALLOW_READ
        - ALLOW_WRITE
        - BENCHMARKTIMER
        - CONSOLE_DEVICES
        - CONTINUE
        - KILL
        - MAXJOBRETIREMENTTIME
        - MAX_STARTD_LOG
        - MAX_STARTER_LOG
        - PERIODIC_CHECKPOINT
        - PREEMPT
        - QMF_BROKER_AUTH_MECH
        - QMF_BROKER_HOST
        - QMF_BROKER_PASSWORD_FILE
        - QMF_BROKER_PORT
        - QMF_BROKER_USERNAME
        - QMF_DELETE_ON_SHUTDOWN
        - RUNBENCHMARKS
        - START
        - STARTD
        - STARTD_ADDRESS_FILE
        - STARTD_ATTRS
        - STARTD_CRON_AUTOPUBLISH
        - STARTD_CRON_NAME
        - STARTD_DEBUG
        - STARTD_JOB_EXPRS
        - STARTD_LOG
        - STARTER
        - STARTER_DEBUG
        - STARTER_LIST
        - STARTER_LOG
        - SUSPEND
        - TRIGGER_DATA_GETDATA_EXECUTABLE
        - TRIGGER_DATA_GETDATA_PERIOD
        - TRIGGER_DATA_GETDATA_PREFIX
        - TRIGGER_DATA_GETDATA_RECONFIG
        - TRIGGER_DATA_JOBLIST
        - UPDATE_INTERVAL
        - WANT_SUSPEND
        - WANT_VACATE
      - {}

    ll_daemon: 
      modifyParams: 
      - REPLACE
      - - CAROD
        - CAROD_BROKER_IP
        - CAROD_BROKER_PORT
        - CAROD_BROKER_QUEUE
        - CAROD_IP
        - CAROD_LEASE_CHECK_INTERVAL
        - CAROD_LEASE_TIME
        - CAROD_LOG
        - CAROD_PORT
        - CAROD_QUEUED_CONNECTIONS
        - MAX_CAROD_LOG
      - {}

